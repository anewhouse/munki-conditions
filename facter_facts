#!/usr/bin/python

import subprocess
import os
import json
import sys
from Foundation import CFPreferencesCopyAppValue
sys.path.insert(0, '/usr/local/munki/munkilib')
import FoundationPlist

if not os.path.exists('/usr/bin/facter'):
    sys.exit("Facter isn't installed on this system. Exiting..")

p = subprocess.Popen(['/usr/bin/facter', '--json'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
out, err = p.communicate()

try:
    json_data = json.loads(out)
except:
    print >> sys.stderr ("Could not parse json data")
    sys.exit(1)

cond = {}
for k, v in json_data.items():
    cond['facter_' + k] = v

managedinstall_dir = CFPreferencesCopyAppValue("ManagedInstallDir", "ManagedInstalls")
if managedinstall_dir is None:
    print >>sys.stderr, "ManagedInstallDir is not set"
    sys.exit(1)

conditionalitems_path = os.path.join(managedinstall_dir, "ConditionalItems.plist")

if os.path.exists(conditionalitems_path):
    try:
        output_dict = FoundationPlist.readPlist(conditionalitems_path)
    except BaseException as e:
        # Abort on any error to avoid clobbering plist.
        print >>sys.stderr, "Couldn't read %s: %s" % (conditionalitems_path, e)
        sys.exit(1)
else:
    output_dict = dict()

output_dict.update(cond)
try:
    FoundationPlist.writePlist(output_dict, conditionalitems_path)
except IOError as e:
    print >>sys.stderr, "Couldn't write to %s: %s" % (
        conditionalitems_path,
        e.strerror,
    )
    sys.exit(1)

